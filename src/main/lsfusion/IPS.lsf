MODULE IPS;

REQUIRE Order;

@defineDocument(iPS, 'Ценовая спецификация');

currency 'Валюта' = DATA Currency (IPS) INDEXED;
nameCurrency 'Валюта' (IPS ips) = name(currency(ips)); 

CLASS IPSLine 'Строка спецификации';

ips 'Спецификация' = DATA IPS (IPSLine) INDEXED;
item 'Номенклатура' = DATA Item (IPSLine) INDEXED;
idItem 'Код' (IPSLine l) = id(item(l));
nameItem 'Номенклатура' (IPSLine l) = name(item(l));
quantity 'Кол-во' = DATA NUMERIC[15,5] (IPSLine) INDEXED;
nameUom 'Ед. изм.' (IPSLine l) = nameUom(item(l)) INDEXED;
price 'Цена' = DATA NUMERIC[12,2] (IPSLine) INDEXED;
currency 'Валюта' (IPSLine l) = currency(ips(l));
nameCurrency 'Валюта' (IPSLine l) = name(currency(l));
note 'Коментарий' = DATA STRING[200] (IPSLine);

EXTEND FORM iPS
    OBJECTS l = IPSLine
    PROPERTIES(l) idItem, nameItem, nameUom, price, nameCurrency, note
    PROPERTIES(l) NEW, DELETE 
    FILTERS ips(l) = o
;

EXTEND FORM iPSs
    PROPERTIES(o) READONLY nameCurrency
;

numeratorIPS = DATA Numerator ();
nameNumeratorIPS 'Нумератор ценовых спецификаций' = name(numeratorIPS());

EXTEND FORM option
    PROPERTIES nameNumeratorIPS()
;

DESIGN option {
    OBJECTS {
        MOVE PROPERTY(nameNumeratorIPS());
    }
}

WHEN SET(IPS ips IS IPS) AND NOT number(ips) AND numeratorIPS() DO {
    number(ips) <- CONCAT '/', series(numeratorIPS()), curStringValue(numeratorIPS());
    incrementValueSession(numeratorIPS());
}
